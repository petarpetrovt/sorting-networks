name: Build and test
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.png'
      - '**.editorconfig'
      - '**.csv'
      - '**codeql-analysis.yml'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.png'
      - '**.editorconfig'
      - '**.csv'
      - '**codeql-analysis.yml'
jobs:
  test:
    name: Test `${{ matrix.options.tf }}` on `${{ matrix.options.os }}`
    runs-on: ${{ matrix.options.os }}
    strategy:
      matrix:
        options:
          # net6.0
          - os: ubuntu-latest
            tf: net6.0
            codecov: true
          - os: windows-latest
            tf: net6.0
            codecov: false
          - os: macos-latest
            tf: net6.0
            codecov: false
          # net5.0
          - os: windows-latest
            tf: net5.0
            rv: '5.0.202'
            codecov: false
          # netcoreapp3.1
          - os: ubuntu-latest
            tf: netcoreapp3.1
            rv: '3.1.404'
            codecov: false
          # netcoreapp2.1
          - os: ubuntu-latest
            tf: netcoreapp2.1
            rv: '2.1.814'
            codecov: false
          # net48
          - os: windows-latest
            tf: net48
            codecov: false
    steps:
     - name: Checkout
       uses: actions/checkout@v2.3.4

     - name: Setup dotnet SDK required for build (global.json)
       uses: actions/setup-dotnet@v1.7.2

     - name: Setup dotnet runtime required for tests (${{ matrix.options.rv }})
       if: ${{ matrix.options.rv != null }}
       uses: actions/setup-dotnet@v1.7.2
       with:
         dotnet-version: ${{ matrix.options.rv }}

     - name: Publish tests
       run: dotnet publish "test/SortingNetworks.Tests/SortingNetworks.Tests.csproj" -o ".deploy/SortingNetworks.Tests" -c "Release" -f "${{ matrix.options.tf }}" /p:DefaultDocumentationFolderBase=".deploy/SortingNetworks.Tests"

     - name: Run tests with code coverage
       if: ${{ matrix.options.codecov }}
       run: dotnet vstest ".deploy/SortingNetworks.Tests/SortingNetworks.Tests.dll" --collect:"XPlat code coverage" --settings:".runsettings" --ResultsDirectory:".deploy/SortingNetworks.Tests/TestResults"

     - name: Run tests without code coverage
       if: ${{ !matrix.options.codecov }}
       run: dotnet vstest ".deploy/SortingNetworks.Tests/SortingNetworks.Tests.dll" --settings:".runsettings" --ResultsDirectory:".deploy/SortingNetworks.Tests/TestResults"

     - name: Update codecov
       if: ${{ matrix.options.codecov }}
       uses: codecov/codecov-action@v1
       with:
         token: ${{ secrets.CODECOV_TOKEN }}
